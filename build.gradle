buildscript {
    ext {
        grailsVersion = project.grailsVersion
    }
    repositories {
        mavenLocal()
        maven { url "https://repo.grails.org/grails/core" }
    }
    dependencies {
        classpath "org.grails:grails-gradle-plugin:$grailsVersion"
        classpath 'com.bertramlabs.plugins:asset-pipeline-gradle:2.5.0'
        classpath "org.grails.plugins:hibernate:4.3.10.5"
    }
}

plugins {
    id "io.spring.dependency-management" version "0.5.2.RELEASE"
}

version "0.1"
group "pathingjar"

apply plugin: "spring-boot"
apply plugin: "war"
apply plugin: "asset-pipeline"
apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: "org.grails.grails-web"
apply plugin: "org.grails.grails-gsp"

ext {
    grailsVersion = project.grailsVersion
    gradleWrapperVersion = project.gradleWrapperVersion
}

assets {
    minifyJs = true
    minifyCss = true
}

repositories {
    mavenLocal()
    maven { url "https://repo.grails.org/grails/core" }
}

dependencyManagement {
    imports {
        mavenBom "org.grails:grails-bom:$grailsVersion"
    }
    applyMavenExclusions false
}

dependencies {
    compile "org.springframework.boot:spring-boot-starter-logging"
    compile "org.springframework.boot:spring-boot-starter-actuator"
    compile "org.springframework.boot:spring-boot-autoconfigure"
    compile "org.springframework.boot:spring-boot-starter-tomcat"
    compile "org.grails:grails-dependencies"
    compile "org.grails:grails-web-boot"

    compile "org.grails.plugins:hibernate"
    compile "org.grails.plugins:cache"
    compile "org.hibernate:hibernate-ehcache"
    compile "org.grails.plugins:scaffolding"

    runtime "org.grails.plugins:asset-pipeline"

    testCompile "org.grails:grails-plugin-testing"
    testCompile "org.grails.plugins:geb"

    // Note: It is recommended to update to a more robust driver (Chrome, Firefox etc.)
    testRuntime 'org.seleniumhq.selenium:selenium-htmlunit-driver:2.44.0'

    console "org.grails:grails-console"
}

task launcherJar(type: Jar) {
	def gradleUserHome = new File(gradle.getGradleUserHomeDir(), "caches")

	def relativeClasspathEntries = configurations.runtime.files.collect {
		new File(gradleUserHome.getAbsolutePath()).toURI().
				relativize(new File(it.getAbsolutePath()).toURI()).getPath()
	}
	appendix = "launcher"
	destinationDir = gradleUserHome
	doFirst {
		manifest {
			attributes "Class-Path": relativeClasspathEntries.join(" ")
		}
	}
}

compileGroovy{
  dependsOn launcherJar
	FileCollection collection = files(launcherJar.archivePath);
	def finCollection = collection
	doLast {
		classpath = finCollection
	}
}

//Grails runtime
bootRun{
	//Must be done first in order to ensure that the classpath is overwritten before runtime begins
	doFirst{
		//Overridng the classpath with a pathing Jar removes BOTH main class directories from the classpath
		FileCollection collection = files("C:/PluginMigration/pathingjar/build/classes/main") + files("C:/PluginMigration/pathingjar/build/resources/main") + files(launcherJar.archivePath)
		classpath = collection
	}
}
task wrapper(type: Wrapper) {
    gradleVersion = gradleWrapperVersion
}
